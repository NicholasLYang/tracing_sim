---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
 name: query-filter
 namespace: istio-system
spec:
 configPatches:
 - applyTo: HTTP_FILTER
   match:
      context: ANY
      proxy:
        proxyVersion: '1\.9.*'
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
   patch:
     operation: INSERT_BEFORE
     value:
       name: envoy.filters.http.wasm
       config_discovery:
         config_source:
           ads: {}
           initial_fetch_timeout: 0s # wait indefinitely to prevent bad Wasm fetch
         type_urls: [ "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
 name: query-filter-config
 namespace: istio-system
spec:
 configPatches:
 - applyTo: EXTENSION_CONFIG
   match:
     context: GATEWAY
   patch:
     operation: ADD
     value:
       name: envoy.filters.http.wasm
       typed_config:
         "@type": type.googleapis.com/udpa.type.v1.TypedStruct
         type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
         value:
           config:
             vm_config:
               vm_id: my-example
               runtime: envoy.wasm.runtime.v8
               allow_precompiled: true
               code:
                 remote:
                   http_uri:
                     uri: https://tracing-filter.s3.amazonaws.com/filter.wasm
                   # Optional: specifying sha256 checksum will let istio agent verify the checksum of downloaded artifacts.
                   # It is **highly** recommended to provide the checksum, since missing checksum will cause the Wasm module to be downloaded repeatedly.
                   # To compute the sha256 checksum of a Wasm module, download the module and run `sha256sum` command with it.
                   # sha256: <WASM-MODULE-SHA>
             # The configuration for the Wasm extension itself
             configuration:
               '@type': type.googleapis.com/google.protobuf.StringValue
               value: my-config


# ---
# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: ui-examplefilter
#   namespace: default
# spec:
#   configPatches:
#   - applyTo: HTTP_FILTER
#     match:
#       context: ANY
#       proxy:
#         proxyVersion: '1\.9.*'
#       listener:
#         filterChain:
#           filter:
#             name: envoy.filters.network.http_connection_manager
#     patch:
#       operation: INSERT_BEFORE
#       value:
#         name: envoy.filters.http.wasm
#         typed_config:
#           '@type': type.googleapis.com/udpa.type.v1.TypedStruct
#           type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
#           value:
#             config:
#               # 'configuration' available at root_context.getConfiguration()
#               configuration:
#                 '@type': type.googleapis.com/google.protobuf.StringValue
#                 value: my-config
#               # root_id MUST match registerRootContext() 2nd param
#               root_id: bidi_root_id
#               vm_config:
#                 code:
#                   local:
#                     filename: /var/local/lib/wasm-filters/filter.wasm
#                 runtime: envoy.wasm.runtime.v8
#                 vm_id: my-example
#                 allow_precompiled: true
